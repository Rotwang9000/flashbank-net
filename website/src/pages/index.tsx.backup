import React from 'react';
import Head from 'next/head';
import { motion } from 'framer-motion';
import {
  Zap,
  Shield,
  TrendingUp,
  Users,
  DollarSign,
  Lock,
  ArrowRight,
  CheckCircle,
  AlertTriangle,
  Wallet,
  Clock,
  Target,
  Coins
} from 'lucide-react';

// FlashBank Revolutionary contract details
const FLASHBANK_ADDRESS = "0x5c0156da501BC97DD35017Fb20624B7f1Ce7E095";
const FLASHBANK_ABI = [
  // Revolutionary commitment system
  "function commitLiquidity(uint256 amount) external",
  "function withdrawCommitment(uint256 amount) external",
  "function withdrawProfits() external",

  // View functions
  "function getUserBalance(address user) external view returns (uint256 commitment, uint256 profits)",
  "function getPoolStats() external view returns (uint256 totalCommitted, uint256 totalProfits, uint256 numProviders, uint256 contractAge)",
  "function calculateFlashLoanFee(uint256 amount) external view returns (uint256 fee)",
  "function flashLoanFeeRate() external view returns (uint256)",
  "function getSecurityInfo() external view returns (bool isUpgradeable, uint256 maxFeeRate, uint256 absoluteMaxFlashLoan, uint256 deployedAt, uint256 creationBlock)",

  // Revolutionary features
  "function userCommitments(address user) external view returns (uint256)",
  "function totalCommittedLiquidity() external view returns (uint256)",
  "function liquidityProviders(uint256 index) external view returns (address)",
  "function isLiquidityProvider(address user) external view returns (bool)"
];

export default function Home() {

  return (
    <>
      <Head>
        <title>FlashBank.net - Trustless Flash Loan Network</title>
        <meta name="description" content="The world's first immutable flash loan network with zero rug-pull risk. Earn up to 500% APY from MEV flash loan fees." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen bg-white">
        <Toaster position="top-right" />

        {/* Header */}
        <header className="bg-white border-b border-gray-200">
          <div className="container mx-auto px-6 py-4 flex justify-between items-center">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
                <Zap className="h-6 w-6 text-white" />
              </div>
              <h1 className="text-2xl font-bold text-gray-900">FlashBank.net</h1>
            </div>
            <ConnectButton />
          </div>
        </header>

        {/* Hero Section */}
        <section className="bg-gradient-to-br from-blue-50 to-indigo-100 py-20">
          <div className="container mx-auto px-6 text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <h1 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6">
                Trustless Flash Loans
                <span className="block text-blue-600">Zero Permanent Risk</span>
              </h1>
              <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
                The world's first immutable flash loan network where your ETH stays in your wallet.
                Earn from MEV opportunities with microsecond risk exposure.
              </p>

              <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
                {isConnected ? (
                  <button
                    onClick={() => document.getElementById('how-it-works')?.scrollIntoView({ behavior: 'smooth' })}
                    className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-lg font-semibold flex items-center space-x-2 transition-colors"
                  >
                    <span>Learn How It Works</span>
                    <ArrowRight className="h-5 w-5" />
                  </button>
                ) : (
                  <ConnectButton.Custom>
                    {({ openConnectModal }) => (
                      <button
                        onClick={openConnectModal}
                        className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-lg font-semibold flex items-center space-x-2 transition-colors"
                      >
                        <span>Connect Wallet</span>
                        <ArrowRight className="h-5 w-5" />
                      </button>
                    )}
                  </ConnectButton.Custom>
                )}

                <a
                  href="https://arbiscan.io/address/0x5c0156da501BC97DD35017Fb20624B7f1Ce7E095"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-gray-600 hover:text-gray-900 flex items-center space-x-2 transition-colors"
                >
                  <Shield className="h-5 w-5" />
                  <span>View Contract</span>
                </a>
              </div>
            </motion.div>
          </div>
        </section>

        {/* How It Works */}
        <section id="how-it-works" className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <div className="text-center mb-16">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">How FlashBank Works</h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                A revolutionary approach where your ETH stays in your wallet while earning from flash loans
              </p>
            </div>

            {/* Simple Process Diagram */}
            <div className="mb-16">
              <div className="grid md:grid-cols-3 gap-8 text-center">
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.1 }}
                  className="bg-blue-50 rounded-lg p-8"
                >
                  <div className="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Wallet className="h-8 w-8 text-white" />
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">1. Keep Your ETH</h3>
                  <p className="text-gray-600">
                    Your ETH stays in your wallet. You approve FlashBank to temporarily use it for flash loans.
                  </p>
                </motion.div>

                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.2 }}
                  className="bg-green-50 rounded-lg p-8"
                >
                  <div className="w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Target className="h-8 w-8 text-white" />
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">2. Smart Selection</h3>
                  <p className="text-gray-600">
                    When a flash loan needs ETH, FlashBank pulls from wallets with amounts closest to the loan size.
                  </p>
                </motion.div>

                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.3 }}
                  className="bg-purple-50 rounded-lg p-8"
                >
                  <div className="w-16 h-16 bg-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Coins className="h-8 w-8 text-white" />
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">3. Earn & Return</h3>
                  <p className="text-gray-600">
                    Only ETH that gets lent receives profits. Your original ETH is returned immediately after the flash loan.
                  </p>
                </motion.div>
              </div>
            </div>

            {/* Benefits for Both Sides */}
            <div className="grid md:grid-cols-2 gap-12">
              {/* For Lenders */}
              <div>
                <h3 className="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                  <Users className="h-6 w-6 text-blue-600 mr-3" />
                  For ETH Holders (Lenders)
                </h3>
                <div className="space-y-4">
                  {[
                    {
                      icon: Shield,
                      title: "Zero Permanent Risk",
                      desc: "Your ETH only leaves your wallet during flash loan execution - typically microseconds"
                    },
                    {
                      icon: Clock,
                      title: "Capital Efficiency",
                      desc: "Your ETH can earn yield elsewhere while still participating in flash loans"
                    },
                    {
                      icon: Target,
                      title: "Fair Participation",
                      desc: "Only ETH that gets lent receives profits - no free-riding from inactive participants"
                    },
                    {
                      icon: Lock,
                      title: "Full Control",
                      desc: "Pause, resume, or adjust your participation anytime with simple approvals"
                    }
                  ].map((benefit, index) => (
                    <div key={index} className="flex items-start space-x-4">
                      <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0">
                        <benefit.icon className="h-5 w-5 text-blue-600" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-1">{benefit.title}</h4>
                        <p className="text-gray-600 text-sm">{benefit.desc}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* For Borrowers */}
              <div>
                <h3 className="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                  <Zap className="h-6 w-6 text-green-600 mr-3" />
                  For MEV Traders (Borrowers)
                </h3>
                <div className="space-y-4">
                  {[
                    {
                      icon: DollarSign,
                      title: "78% Lower Fees",
                      desc: "0.02% fee vs 0.09% on Aave - significant cost savings on large loans"
                    },
                    {
                      icon: TrendingUp,
                      title: "Higher Profits",
                      desc: "Lower borrowing costs mean higher net returns on arbitrage opportunities"
                    },
                    {
                      icon: Coins,
                      title: "No Capital Required",
                      desc: "Access flash loans without upfront capital - use committed liquidity instead"
                    },
                    {
                      icon: CheckCircle,
                      title: "Immutable & Trustless",
                      desc: "Contract cannot be changed or rug-pulled, providing maximum security"
                    }
                  ].map((benefit, index) => (
                    <div key={index} className="flex items-start space-x-4">
                      <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center flex-shrink-0">
                        <benefit.icon className="h-5 w-5 text-green-600" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-1">{benefit.title}</h4>
                        <p className="text-gray-600 text-sm">{benefit.desc}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Network Stats */}
        <section className="py-20 bg-gray-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-gray-900 mb-12 text-center">Network Statistics</h2>
            <div className="grid md:grid-cols-4 gap-8">
              <div className="text-center">
                <div className="text-4xl font-bold text-blue-600 mb-2">{poolStats.totalCommitted} ETH</div>
                <div className="text-gray-600">Total Committed Liquidity</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-green-600 mb-2">{poolStats.totalProfits} ETH</div>
                <div className="text-gray-600">Total Profits Generated</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-purple-600 mb-2">{poolStats.numProviders}</div>
                <div className="text-gray-600">Active Participants</div>
              </div>
              <div className="text-center">
                <div className="text-4xl font-bold text-orange-600 mb-2">0.02%</div>
                <div className="text-gray-600">Flash Loan Fee</div>
              </div>
            </div>
          </div>
        </section>

        {/* User Dashboard */}
        {isConnected && (
          <section className="py-20 bg-white">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-12 text-center">Your Participation Dashboard</h2>

              {/* User Stats */}
              <div className="grid md:grid-cols-3 gap-8 mb-12">
                <div className="bg-blue-50 rounded-lg p-8 text-center">
                  <div className="text-3xl font-bold text-blue-600 mb-2">{userCommitment} ETH</div>
                  <div className="text-gray-600">Your Commitment</div>
                </div>
                <div className="bg-green-50 rounded-lg p-8 text-center">
                  <div className="text-3xl font-bold text-green-600 mb-2">{userProfits} ETH</div>
                  <div className="text-gray-600">Available Profits</div>
                </div>
                <div className="bg-purple-50 rounded-lg p-8 text-center">
                  <div className="text-3xl font-bold text-purple-600 mb-2">
                    {isPaused ? '⏸️ Paused' : '✅ Active'}
                  </div>
                  <div className="text-gray-600">Status</div>
                </div>
              </div>

              {/* Action Cards */}
              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
                {/* Commit */}
                <div className="bg-white border border-gray-200 rounded-lg p-6 shadow-sm">
                  <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
                    <DollarSign className="h-5 w-5 text-blue-600 mr-2" />
                    Commit ETH
                  </h3>
                  <p className="text-sm text-gray-600 mb-4">
                    Approve FlashBank to temporarily use your ETH for flash loans
                  </p>
                  <input
                    type="number"
                    placeholder="ETH amount"
                    value={commitmentAmount}
                    onChange={(e) => setCommitmentAmount(e.target.value)}
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm mb-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                  <button
                    onClick={handleCommitLiquidity}
                    disabled={loading || !commitmentAmount}
                    className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white py-2 rounded-lg text-sm font-medium transition-colors"
                  >
                    {loading ? 'Committing...' : 'Commit'}
                  </button>
                </div>

                {/* Withdraw */}
                <div className="bg-white border border-gray-200 rounded-lg p-6 shadow-sm">
                  <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
                    <ArrowRight className="h-5 w-5 text-purple-600 mr-2 rotate-180" />
                    Withdraw Commitment
                  </h3>
                  <p className="text-sm text-gray-600 mb-4">
                    Reduce or remove your ETH commitment
                  </p>
                  <input
                    type="text"
                    placeholder="Amount or 'all'"
                    value={withdrawAmount}
                    onChange={(e) => setWithdrawAmount(e.target.value)}
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm mb-3 focus:outline-none focus:ring-2 focus:ring-purple-500"
                  />
                  <button
                    onClick={handleWithdrawCommitment}
                    disabled={loading || !withdrawAmount}
                    className="w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-400 text-white py-2 rounded-lg text-sm font-medium transition-colors"
                  >
                    {loading ? 'Withdrawing...' : 'Withdraw'}
                  </button>
                </div>

                {/* Pause/Resume */}
                <div className="bg-white border border-gray-200 rounded-lg p-6 shadow-sm">
                  <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
                    {isPaused ? <CheckCircle className="h-5 w-5 text-green-600 mr-2" /> : <AlertTriangle className="h-5 w-5 text-orange-600 mr-2" />}
                    {isPaused ? 'Resume' : 'Pause'} Participation
                  </h3>
                  <p className="text-sm text-gray-600 mb-4">
                    {isPaused ? 'Resume earning from flash loans' : 'Temporarily stop participation'}
                  </p>
                  <button
                    onClick={isPaused ? handleResumeCommitment : handlePauseCommitment}
                    disabled={loading}
                    className={`w-full text-white py-2 rounded-lg text-sm font-medium transition-colors ${
                      isPaused
                        ? 'bg-green-600 hover:bg-green-700 disabled:bg-gray-400'
                        : 'bg-orange-600 hover:bg-orange-700 disabled:bg-gray-400'
                    }`}
                  >
                    {loading ? 'Processing...' : (isPaused ? 'Resume' : 'Pause')}
                  </button>
                </div>

                {/* Claim Profits */}
                <div className="bg-white border border-gray-200 rounded-lg p-6 shadow-sm">
                  <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
                    <TrendingUp className="h-5 w-5 text-green-600 mr-2" />
                    Claim Profits
                  </h3>
                  <p className="text-sm text-gray-600 mb-4">
                    Withdraw your earnings from flash loan fees
                  </p>
                  <div className="text-2xl font-bold text-green-600 mb-3">{userProfits} ETH</div>
                  <button
                    onClick={handleWithdrawProfit}
                    disabled={loading || parseFloat(userProfits) === 0}
                    className="w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white py-2 rounded-lg text-sm font-medium transition-colors"
                  >
                    {loading ? 'Claiming...' : 'Claim Profits'}
                  </button>
                </div>
              </div>

              {/* How It Works Summary */}
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-blue-900 mb-4">How Your Participation Works</h3>
                <div className="grid md:grid-cols-3 gap-6 text-sm">
                  <div className="text-center">
                    <div className="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-3">
                      <Wallet className="h-6 w-6 text-white" />
                    </div>
                    <h4 className="font-semibold text-blue-900 mb-2">1. ETH Stays Safe</h4>
                    <p className="text-blue-700">Your ETH remains in your wallet. FlashBank only gets temporary approval to use it.</p>
                  </div>
                  <div className="text-center">
                    <div className="w-12 h-12 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-3">
                      <Target className="h-6 w-6 text-white" />
                    </div>
                    <h4 className="font-semibold text-green-900 mb-2">2. Smart Selection</h4>
                    <p className="text-green-700">When flash loans need ETH, the system pulls from wallets with amounts closest to the loan size.</p>
                  </div>
                  <div className="text-center">
                    <div className="w-12 h-12 bg-purple-600 rounded-full flex items-center justify-center mx-auto mb-3">
                      <Coins className="h-6 w-6 text-white" />
                    </div>
                    <h4 className="font-semibold text-purple-900 mb-2">3. Fair Rewards</h4>
                    <p className="text-purple-700">Only ETH that actually gets lent receives profits - ensuring fair distribution.</p>
                  </div>
                </div>
              </div>
            </div>
          </section>
        )}

        {/* Footer */}
        <footer className="bg-gray-900 text-white py-16">
          <div className="container mx-auto px-6 text-center">
            <div className="mb-8">
              <div className="flex items-center justify-center space-x-3 mb-4">
                <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                  <Zap className="h-5 w-5 text-white" />
                </div>
                <span className="text-2xl font-bold">FlashBank.net</span>
              </div>
              <p className="text-gray-400">Revolutionary trustless flash loan network</p>
            </div>

            <div className="flex justify-center space-x-8 mb-8">
              <a href="https://github.com/flashbank-net" className="text-gray-400 hover:text-white transition-colors">GitHub</a>
              <a href="https://docs.flashbank.net" className="text-gray-400 hover:text-white transition-colors">Docs</a>
              <a href="https://twitter.com/FlashBankNet" className="text-gray-400 hover:text-white transition-colors">Twitter</a>
              <a href="https://discord.gg/flashbank" className="text-gray-400 hover:text-white transition-colors">Discord</a>
            </div>

            <div className="border-t border-gray-800 pt-8">
              <p className="text-gray-400">&copy; 2025 FlashBank.net. Built for the DeFi community.</p>
              <p className="text-sm mt-2 text-gray-500">
                <AlertTriangle className="h-4 w-4 inline mr-1" />
                Smart contracts involve risk. Do your own research.
              </p>
            </div>
          </div>
        </footer>
      </div>
    </>
  );
}