"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6336],{74741:function(e,o,t){t.d(o,{nY:function(){return I}});var n=t(86949),r=t(73932),a=t(62411),i=t(68314),s=t(22192),c=t(79166),l=t(18462),d=t(47205),u=t(83241),k=t(2446);let T={getGasPriceInEther:(e,o)=>Number(o*e)/1e18,getGasPriceInUSD(e,o,t){let n=T.getGasPriceInEther(o,t);return a.C.bigNumber(e).times(n).toNumber()},getPriceImpact({sourceTokenAmount:e,sourceTokenPriceInUSD:o,toTokenPriceInUSD:t,toTokenAmount:n}){let r=a.C.bigNumber(e).times(o),i=a.C.bigNumber(n).times(t);return r.minus(i).div(r).times(100).toNumber()},getMaxSlippage(e,o){let t=a.C.bigNumber(e).div(100);return a.C.multiply(o,t).toNumber()},getProviderFee:(e,o=.0085)=>a.C.bigNumber(e).times(o).toString(),isInsufficientNetworkTokenForGas:(e,o)=>!!a.C.bigNumber(e).eq(0)||a.C.bigNumber(a.C.bigNumber(o||"0")).gt(e),isInsufficientSourceTokenForSwap(e,o,t){let n=t?.find(e=>e.address===o)?.quantity?.numeric;return a.C.bigNumber(n||"0").lt(e)}};var p=t(68343),g=t(83966),m=t(56008),w=t(66691),h=t(59757),A=t(29460),S=t(9793),b=t(51440),C=t(4511),y=t(82879);let v={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,switchingTokens:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:d.bq.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},P=(0,n.sj)({...v}),f={state:P,subscribe:e=>(0,n.Ld)(P,()=>e(P)),subscribeKey:(e,o)=>(0,r.VW)(P,e,o),getParams(){let e=h.R.state.activeChain,o=g.AccountController.getCaipAddress(e)??h.R.state.activeCaipAddress,t=u.j.getPlainAddress(o),n=(0,l.EO)(),r=S.ConnectorController.getConnectorId(h.R.state.activeChain);if(!t)throw Error("No address found to swap the tokens from.");let s=!P.toToken?.address||!P.toToken?.decimals,c=!P.sourceToken?.address||!P.sourceToken?.decimals||!a.C.bigNumber(P.sourceTokenAmount).gt(0),d=!P.sourceTokenAmount;return{networkAddress:n,fromAddress:t,fromCaipAddress:o,sourceTokenAddress:P.sourceToken?.address,toTokenAddress:P.toToken?.address,toTokenAmount:P.toTokenAmount,toTokenDecimals:P.toToken?.decimals,sourceTokenAmount:P.sourceTokenAmount,sourceTokenDecimals:P.sourceToken?.decimals,invalidToToken:s,invalidSourceToken:c,invalidSourceTokenAmount:d,availableToSwap:o&&!s&&!c&&!d,isAuthConnector:r===i.b.CONNECTOR_ID.AUTH}},async setSourceToken(e){if(!e){P.sourceToken=e,P.sourceTokenAmount="",P.sourceTokenPriceInUSD=0;return}P.sourceToken=e,await I.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){P.sourceTokenAmount=e},async setToToken(e){if(!e){P.toToken=e,P.toTokenAmount="",P.toTokenPriceInUSD=0;return}P.toToken=e,await I.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){P.toTokenAmount=e?a.C.toFixed(e,6):""},async setTokenPrice(e,o){let t=P.tokensPriceMap[e]||0;t||(P.loadingPrices=!0,t=await I.getAddressPrice(e)),"sourceToken"===o?P.sourceTokenPriceInUSD=t:"toToken"===o&&(P.toTokenPriceInUSD=t),P.loadingPrices&&(P.loadingPrices=!1),I.getParams().availableToSwap&&!P.switchingTokens&&I.swapTokens()},async switchTokens(){if(!P.initializing&&P.initialized&&!P.switchingTokens){P.switchingTokens=!0;try{let e=P.toToken?{...P.toToken}:void 0,o=P.sourceToken?{...P.sourceToken}:void 0,t=e&&""===P.toTokenAmount?"1":P.toTokenAmount;I.setSourceTokenAmount(t),I.setToTokenAmount(""),await I.setSourceToken(e),await I.setToToken(o),P.switchingTokens=!1,I.swapTokens()}catch(e){throw P.switchingTokens=!1,e}}},resetState(){P.myTokensWithBalance=v.myTokensWithBalance,P.tokensPriceMap=v.tokensPriceMap,P.initialized=v.initialized,P.initializing=v.initializing,P.switchingTokens=v.switchingTokens,P.sourceToken=v.sourceToken,P.sourceTokenAmount=v.sourceTokenAmount,P.sourceTokenPriceInUSD=v.sourceTokenPriceInUSD,P.toToken=v.toToken,P.toTokenAmount=v.toTokenAmount,P.toTokenPriceInUSD=v.toTokenPriceInUSD,P.networkPrice=v.networkPrice,P.networkTokenSymbol=v.networkTokenSymbol,P.networkBalanceInUSD=v.networkBalanceInUSD,P.inputError=v.inputError},resetValues(){let{networkAddress:e}=I.getParams(),o=P.tokens?.find(o=>o.address===e);I.setSourceToken(o),I.setToToken(void 0)},getApprovalLoadingState:()=>P.loadingApprovalTransaction,clearError(){P.transactionError=void 0},async initializeState(){if(!P.initializing){if(P.initializing=!0,!P.initialized)try{await I.fetchTokens(),P.initialized=!0}catch(e){P.initialized=!1,y.SnackController.showError("Failed to initialize swap"),C.RouterController.goBack()}P.initializing=!1}},async fetchTokens(){let{networkAddress:e}=I.getParams();await I.getNetworkTokenPrice(),await I.getMyTokensWithBalance();let o=P.myTokensWithBalance?.find(o=>o.address===e);o&&(P.networkTokenSymbol=o.symbol,I.setSourceToken(o),I.setSourceTokenAmount("0"))},async getTokenList(){let e=h.R.state.activeCaipNetwork?.caipNetworkId;if(P.caipNetworkId!==e||!P.tokens)try{P.tokensLoading=!0;let o=await k.n.getTokenList(e);P.tokens=o,P.caipNetworkId=e,P.popularTokens=o.sort((e,o)=>e.symbol<o.symbol?-1:e.symbol>o.symbol?1:0),P.suggestedTokens=o.filter(e=>!!d.bq.SWAP_SUGGESTED_TOKENS.includes(e.symbol))}catch(e){P.tokens=[],P.popularTokens=[],P.suggestedTokens=[]}finally{P.tokensLoading=!1}},async getAddressPrice(e){let o=P.tokensPriceMap[e];if(o)return o;let t=await w.L.fetchTokenPrice({addresses:[e]}),n=t?.fungibles||[],r=[...P.tokens||[],...P.myTokensWithBalance||[]],a=r?.find(o=>o.address===e)?.symbol,i=parseFloat((n.find(e=>e.symbol.toLowerCase()===a?.toLowerCase())?.price||0).toString());return P.tokensPriceMap[e]=i,i},async getNetworkTokenPrice(){let{networkAddress:e}=I.getParams(),o=await w.L.fetchTokenPrice({addresses:[e]}).catch(()=>(y.SnackController.showError("Failed to fetch network token price"),{fungibles:[]})),t=o.fungibles?.[0],n=t?.price.toString()||"0";P.tokensPriceMap[e]=parseFloat(n),P.networkTokenSymbol=t?.symbol||"",P.networkPrice=n},async getMyTokensWithBalance(e){let o=await c.Q.getMyTokensWithBalance(e),t=k.n.mapBalancesToSwapTokens(o);t&&(await I.getInitialGasPrice(),I.setBalances(t))},setBalances(e){let{networkAddress:o}=I.getParams(),t=h.R.state.activeCaipNetwork;if(!t)return;let n=e.find(e=>e.address===o);e.forEach(e=>{P.tokensPriceMap[e.address]=e.price||0}),P.myTokensWithBalance=e.filter(e=>e.address.startsWith(t.caipNetworkId)),P.networkBalanceInUSD=n?a.C.multiply(n.quantity.numeric,n.price).toString():"0"},async getInitialGasPrice(){let e=await k.n.fetchGasPrice();if(!e)return{gasPrice:null,gasPriceInUSD:null};switch(h.R.state?.activeCaipNetwork?.chainNamespace){case i.b.CHAIN.SOLANA:return P.gasFee=e.standard??"0",P.gasPriceInUSD=a.C.multiply(e.standard,P.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(P.gasFee),gasPriceInUSD:Number(P.gasPriceInUSD)};case i.b.CHAIN.EVM:default:let o=e.standard??"0",t=BigInt(o),n=BigInt(15e4),r=T.getGasPriceInUSD(P.networkPrice,n,t);return P.gasFee=o,P.gasPriceInUSD=r,{gasPrice:t,gasPriceInUSD:r}}},async swapTokens(){let e=g.AccountController.state.address,o=P.sourceToken,t=P.toToken,n=a.C.bigNumber(P.sourceTokenAmount).gt(0);if(n||I.setToTokenAmount(""),!t||!o||P.loadingPrices||!n)return;P.loadingQuote=!0;let r=a.C.bigNumber(P.sourceTokenAmount).times(10**o.decimals).round(0);try{let n=await w.L.fetchSwapQuote({userAddress:e,from:o.address,to:t.address,gasPrice:P.gasFee,amount:r.toString()});P.loadingQuote=!1;let i=n?.quotes?.[0]?.toAmount;if(!i){m.AlertController.open({displayMessage:"Incorrect amount",debugMessage:"Please enter a valid amount"},"error");return}let s=a.C.bigNumber(i).div(10**t.decimals).toString();I.setToTokenAmount(s),I.hasInsufficientToken(P.sourceTokenAmount,o.address)?P.inputError="Insufficient balance":(P.inputError=void 0,I.setTransactionDetails())}catch(o){let e=await k.n.handleSwapError(o);P.loadingQuote=!1,P.inputError=e||"Insufficient balance"}},async getTransaction(){let{fromCaipAddress:e,availableToSwap:o}=I.getParams(),t=P.sourceToken,n=P.toToken;if(e&&o&&t&&n&&!P.loadingQuote)try{let o;return P.loadingBuildTransaction=!0,o=await k.n.fetchSwapAllowance({userAddress:e,tokenAddress:t.address,sourceTokenAmount:P.sourceTokenAmount,sourceTokenDecimals:t.decimals})?await I.createSwapTransaction():await I.createAllowanceTransaction(),P.loadingBuildTransaction=!1,P.fetchError=!1,o}catch(e){C.RouterController.goBack(),y.SnackController.showError("Failed to check allowance"),P.loadingBuildTransaction=!1,P.approvalTransaction=void 0,P.swapTransaction=void 0,P.fetchError=!0;return}},async createAllowanceTransaction(){let{fromCaipAddress:e,sourceTokenAddress:o,toTokenAddress:t}=I.getParams();if(e&&t){if(!o)throw Error("createAllowanceTransaction - No source token address found.");try{let n=await w.L.generateApproveCalldata({from:o,to:t,userAddress:e}),r=u.j.getPlainAddress(n.tx.from);if(!r)throw Error("SwapController:createAllowanceTransaction - address is required");let a={data:n.tx.data,to:r,gasPrice:BigInt(n.tx.eip155.gasPrice),value:BigInt(n.tx.value),toAmount:P.toTokenAmount};return P.swapTransaction=void 0,P.approvalTransaction={data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount},{data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount}}catch(e){C.RouterController.goBack(),y.SnackController.showError("Failed to create approval transaction"),P.approvalTransaction=void 0,P.swapTransaction=void 0,P.fetchError=!0;return}}},async createSwapTransaction(){let{networkAddress:e,fromCaipAddress:o,sourceTokenAmount:t}=I.getParams(),n=P.sourceToken,r=P.toToken;if(!o||!t||!n||!r)return;let a=A.ConnectionController.parseUnits(t,n.decimals)?.toString();try{let t=await w.L.generateSwapCalldata({userAddress:o,from:n.address,to:r.address,amount:a,disableEstimate:!0}),i=n.address===e,s=BigInt(t.tx.eip155.gas),c=BigInt(t.tx.eip155.gasPrice),l=u.j.getPlainAddress(t.tx.to);if(!l)throw Error("SwapController:createSwapTransaction - address is required");let d={data:t.tx.data,to:l,gas:s,gasPrice:c,value:i?BigInt(a??"0"):BigInt("0"),toAmount:P.toTokenAmount};return P.gasPriceInUSD=T.getGasPriceInUSD(P.networkPrice,s,c),P.approvalTransaction=void 0,P.swapTransaction=d,d}catch(e){C.RouterController.goBack(),y.SnackController.showError("Failed to create transaction"),P.approvalTransaction=void 0,P.swapTransaction=void 0,P.fetchError=!0;return}},onEmbeddedWalletApprovalSuccess(){y.SnackController.showLoading("Approve limit increase in your wallet"),C.RouterController.replace("SwapPreview")},async sendTransactionForApproval(e){let{fromAddress:o,isAuthConnector:t}=I.getParams();P.loadingApprovalTransaction=!0,t?C.RouterController.pushTransactionStack({onSuccess:I.onEmbeddedWalletApprovalSuccess}):y.SnackController.showLoading("Approve limit increase in your wallet");try{await A.ConnectionController.sendTransaction({address:o,to:e.to,data:e.data,value:e.value,chainNamespace:i.b.CHAIN.EVM}),await I.swapTokens(),await I.getTransaction(),P.approvalTransaction=void 0,P.loadingApprovalTransaction=!1}catch(e){P.transactionError=e?.displayMessage,P.loadingApprovalTransaction=!1,y.SnackController.showError(e?.displayMessage||"Transaction error"),b.X.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:e?.displayMessage||e?.message||"Unknown",network:h.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:I.state.sourceToken?.symbol||"",swapToToken:I.state.toToken?.symbol||"",swapFromAmount:I.state.sourceTokenAmount||"",swapToAmount:I.state.toTokenAmount||"",isSmartAccount:(0,l.r9)(i.b.CHAIN.EVM)===s.y_.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(e){if(!e)return;let{fromAddress:o,toTokenAmount:t,isAuthConnector:n}=I.getParams();P.loadingTransaction=!0;let r=`Swapping ${P.sourceToken?.symbol} to ${a.C.formatNumberToLocalString(t,3)} ${P.toToken?.symbol}`,c=`Swapped ${P.sourceToken?.symbol} to ${a.C.formatNumberToLocalString(t,3)} ${P.toToken?.symbol}`;n?C.RouterController.pushTransactionStack({onSuccess(){C.RouterController.replace("Account"),y.SnackController.showLoading(r),f.resetState()}}):y.SnackController.showLoading("Confirm transaction in your wallet");try{let t=[P.sourceToken?.address,P.toToken?.address].join(","),r=await A.ConnectionController.sendTransaction({address:o,to:e.to,data:e.data,value:e.value,chainNamespace:i.b.CHAIN.EVM});return P.loadingTransaction=!1,y.SnackController.showSuccess(c),b.X.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:h.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:I.state.sourceToken?.symbol||"",swapToToken:I.state.toToken?.symbol||"",swapFromAmount:I.state.sourceTokenAmount||"",swapToAmount:I.state.toTokenAmount||"",isSmartAccount:(0,l.r9)(i.b.CHAIN.EVM)===s.y_.ACCOUNT_TYPES.SMART_ACCOUNT}}),f.resetState(),n||C.RouterController.replace("Account"),f.getMyTokensWithBalance(t),r}catch(e){P.transactionError=e?.displayMessage,P.loadingTransaction=!1,y.SnackController.showError(e?.displayMessage||"Transaction error"),b.X.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:e?.displayMessage||e?.message||"Unknown",network:h.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:I.state.sourceToken?.symbol||"",swapToToken:I.state.toToken?.symbol||"",swapFromAmount:I.state.sourceTokenAmount||"",swapToAmount:I.state.toTokenAmount||"",isSmartAccount:(0,l.r9)(i.b.CHAIN.EVM)===s.y_.ACCOUNT_TYPES.SMART_ACCOUNT}});return}},hasInsufficientToken:(e,o)=>T.isInsufficientSourceTokenForSwap(e,o,P.myTokensWithBalance),setTransactionDetails(){let{toTokenAddress:e,toTokenDecimals:o}=I.getParams();e&&o&&(P.gasPriceInUSD=T.getGasPriceInUSD(P.networkPrice,BigInt(P.gasFee),BigInt(15e4)),P.priceImpact=T.getPriceImpact({sourceTokenAmount:P.sourceTokenAmount,sourceTokenPriceInUSD:P.sourceTokenPriceInUSD,toTokenPriceInUSD:P.toTokenPriceInUSD,toTokenAmount:P.toTokenAmount}),P.maxSlippage=T.getMaxSlippage(P.slippage,P.toTokenAmount),P.providerFee=T.getProviderFee(P.sourceTokenAmount))}},I=(0,p.P)(f)},85642:function(e,o,t){t(21927)},31059:function(e,o,t){var n=t(19064),r=t(59662),a=t(35162),i=t(24134),s=t(25729),c=t(95636),l=(0,c.iv)`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
    user-select: none;
    user-drag: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
  }

  :host([data-boxed='true']) {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: ${({tokens:e})=>e.theme.foregroundPrimary};
    border-radius: ${({borderRadius:e})=>e[2]};
  }

  :host([data-boxed='true']) img {
    width: 20px;
    height: 20px;
    border-radius: ${({borderRadius:e})=>e[16]};
  }

  :host([data-full='true']) img {
    width: 100%;
    height: 100%;
  }

  :host([data-boxed='true']) wui-icon {
    width: 20px;
    height: 20px;
  }

  :host([data-icon='error']) {
    background-color: ${({tokens:e})=>e.core.backgroundError};
  }

  :host([data-rounded='true']) {
    border-radius: ${({borderRadius:e})=>e[16]};
  }
`,d=function(e,o,t,n){var r,a=arguments.length,i=a<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,o,t,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(a<3?r(i):a>3?r(o,t,i):r(o,t))||i);return a>3&&i&&Object.defineProperty(o,t,i),i};let u=class extends n.oi{constructor(){super(...arguments),this.src="./path/to/image.jpg",this.alt="Image",this.size=void 0,this.boxed=!1,this.rounded=!1,this.fullSize=!1}render(){let e={inherit:"inherit",xxs:"2",xs:"3",sm:"4",md:"4",mdl:"5",lg:"5",xl:"6",xxl:"7","3xl":"8","4xl":"9","5xl":"10"};return(this.style.cssText=`
      --local-width: ${this.size?`var(--apkt-spacing-${e[this.size]});`:"100%"};
      --local-height: ${this.size?`var(--apkt-spacing-${e[this.size]});`:"100%"};
      `,this.dataset.boxed=this.boxed?"true":"false",this.dataset.rounded=this.rounded?"true":"false",this.dataset.full=this.fullSize?"true":"false",this.dataset.icon=this.iconColor||"inherit",this.icon)?(0,n.dy)`<wui-icon
        color=${this.iconColor||"inherit"}
        name=${this.icon}
        size="lg"
      ></wui-icon> `:this.logo?(0,n.dy)`<wui-icon size="lg" color="inherit" name=${this.logo}></wui-icon> `:(0,n.dy)`<img src=${(0,a.o)(this.src)} alt=${this.alt} @error=${this.handleImageError} />`}handleImageError(){this.dispatchEvent(new CustomEvent("onLoadError",{bubbles:!0,composed:!0}))}};u.styles=[i.ET,l],d([(0,r.Cb)()],u.prototype,"src",void 0),d([(0,r.Cb)()],u.prototype,"logo",void 0),d([(0,r.Cb)()],u.prototype,"icon",void 0),d([(0,r.Cb)()],u.prototype,"iconColor",void 0),d([(0,r.Cb)()],u.prototype,"alt",void 0),d([(0,r.Cb)()],u.prototype,"size",void 0),d([(0,r.Cb)({type:Boolean})],u.prototype,"boxed",void 0),d([(0,r.Cb)({type:Boolean})],u.prototype,"rounded",void 0),d([(0,r.Cb)({type:Boolean})],u.prototype,"fullSize",void 0),d([(0,s.M)("wui-image")],u)}}]);